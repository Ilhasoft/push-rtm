- extends "public_base_v2.html"

- load thumbnail humanize ureport compress i18n

- block content
  - if latest_poll
    .homepage-latest-poll
      .uk-margin-remove(uk-grid)
        .homepage-color-bg-main
        .uk-width-1-2.block-content.is-half.homepage-color-bg-content
          .recent-results-label
            Recent Poll Results
          .poll-title
            {{ latest_poll.title }}
          .poll-question-title
            -if latest_poll.get_first_question
              {{ latest_poll.get_first_question.title }}
            
        .uk-width-1-2.block-content.is-half.booklet-bg-no-margin
          -if latest_poll.get_first_question
            .top-question-graph
              .poll-question-graph-all.has-highcharts(id="graph-all-question-{{latest_poll.get_first_question.id}}" data-question="{{latest_poll.get_first_question.id}}")
          .view-results.uk-child-width-1-1(uk-grid)
            .
              %a.button.view-full-results.primary-color{ href: "{% url 'public.poll_read' latest_poll.id %}"}
                - trans "VIEW FULL RESULTS"
              

  .homepage-reporters-stats
    .uk-margin-remove(uk-grid)
      .uk-width-1-2
        .local-count-label
          - trans "U-REPORTERS IN"
          {{ org.name|upper }}
        .local-count
          {{ reporters|intcomma }}
        .worldwide-count-label
          - trans "U-REPORTERS WORLDWIDE:"
        .worldwide-count
          {{ global_counter|intcomma }}
      .uk-width-1-2
        .has-graph.uk-child-width-1-1(uk-grid)
          .graph-title
            - trans "AGES"
          .graph-chart
            .age-stats{ id: "age-chart"}
  
  .block-row
    .uk-margin-remove(uk-grid)
      .uk-width-1-2.block-content.homepage-color-bg-1
        .homepage-block-content
          .join-video
            %img(height="100%" src="{{ STATIC_URL }}img/homepage_video_placeholder.png" style="border: 2px solid red;") 
          .join-description
            This Section is a video describing ways to join  and sign up as a U-reporter.
          .join-button.button
            JOIN NOW

      .uk-width-1-2.block-content
        .social-media-block
          .fb-like-box{data-href:'{{ org|config:"facebook_page_url" }}', data-width:"400", data-height:"850", data-colorscheme:"light", data-show-faces:"false", data-header:"false", data-stream:"true", data-show-border:"false"}
  
  - for story in stories|slice:"1"
    .block-row.homepage-story
      .uk-margin-remove(uk-grid)
        .uk-width-1-2.block-content.homegage-dotted-bg
          .pre-story-block
          .featured-story-label
            -trans "FEATURED STORY"
          .story-title
            {{ story.title }}
          .story-teaser
            {{ story.summary|linebreaksbr }}
          %a.read-more-button.button(href="{% url 'v2.public.story_read' story.pk %}")
            -trans "READ MORE"

        .uk-width-1-2.block-content.homepage-color-bg-2
          .pre-u-border
          .u-bg
            %img{height:"100%", src:"{{ STATIC_URL }}img/u-green.png"}
          .story-image-bg
            .story-image
              %img{height:"100%", src:"{{ STATIC_URL }}img/missing_image_placeholder.jpg"}
            -# - if story.get_image
            -#   {% thumbnail story.get_image "350x350" crop="top" as im %}
            -#   <img width="100%" height="100%" src="{{im.url}}" />
            -#   {% endthumbnail %}
            -# - else
            -#   %img{height:"100%", src:"{{ STATIC_URL }}img/missing_image_placeholder.jpg"}  

  
  - if feat_images
    .homepage-tiles
      .uk-margin-remove(uk-grid)
        .uk-width-1-2.block-content.homepage-color-bg-3
          .photo-tiles-title
            Photos Tiles
          .photo-tiles-description
            The area can be edited when the poll is over to focus additionally on review and learnings, this second area can also be edited in the same way. It is important to give context  to all our polls. This will be character limited to hold the space correctly and encourage simplicity.  
          %a.read-more-button.button(href="#")
            -trans "READ MORE"
        .uk-width-1-2.block-content
          .uk-child-width-1-2(uk-grid)
            -for image in feat_images
              - if forloop.counter0 < 6
                .
                  %img{height:"100%", src:"{{ STATIC_URL }}img/missing_image_placeholder.jpg"}


- block extra-style
  {{ block.super }}
  :css
    .highcharts-background {
      fill: transparent;
    }

    .fb-messengermessageus {
      line-height: 16px;
      margin-bottom: 5px;
    }

    .poll-map {
      height: 300px;
      width: 100%;
    }

    .admin-name {
      font-size: 18px;
      margin-top: 10px;
      margin-bottom: 5px;
      font-family: UreportHeadlineFont;
    }

    .leaflet-container {
      background: #fff;
    }

    .leaflet-container .legend {
      line-height: 13px;
      color: #555;
      font-size:10px;
    }

    .leaflet-container .legend i {
      width: 13px;
      height: 13px;
      float: left;
      margin-right: 8px;
      opacity: 0.7;
    }

    .leaflet-container .info {
      color: #000;
    }

    .top-border {
      border-top: 1px solid #000;
      margin-top: 5px;
    }

    .info-count {
      font-size: 18px;
      padding-right: 10px;
      line-height: 100%;
    }

    .info-tiny {
      font-size: 9px;
      padding-right: 10px;
      line-height: 80%;
    }

    .info-percentage {
      font-size: 22px;
      line-height: 100%;
    }

    .top-color {
      color: rgb(0,104,55);
    }

    .other-color {
      color: rgb(165,0,38);
    }

    .leaflet-container .info {
      margin-top: 5px;
      margin-left: 5px;
    }

   .hero-container {
      {% if latest_poll %}
      {% thumbnail latest_poll.get_category_image "1280x678" crop="top" as im %}
        background-image:url('{{im.url}}');
      {% empty %}
        background-image:url('{{ STATIC_URL }}img/missing_image_placeholder.jpg');
      {% endthumbnail %}
      {% endif%}
    }

   .hero-small-background {
      {% if latest_poll %}
      {% thumbnail latest_poll.get_category_image "768x508" crop="top" as im %}
        background-image:url('{{im.url}}');
      {% empty %}
        background-image:url('{{ STATIC_URL }}img/missing_image_placeholder.jpg');
      {% endthumbnail %}
      {% endif%}
    }


- block extra-script
  {{ block.super }}
  -if not is_iorg
    <script src="{{ STATIC_URL }}js/isotope.pkgd.min.js"></script>
    {% compress js %}
    <script type="text/coffeescript" src="{{ STATIC_URL }}coffee/featured_region.coffee" />
    {% endcompress %}
    :javascript

      var newsPage = 1;
      function loadNews(page) {
        $.ajax({url:'/news/?page=' + page, dataType:'json'}).done(function(data){
           for (i=0; i<data.news.length; i++) {
             newsItem = data.news[i];

             html = '<div class="news-item">';
             html += '<div class="news-item-title primary-color">';
             html += newsItem.title;
             html += '<div class="news-item-date pull-right">';
             html += newsItem.created_on;
             html += '</div></div><div class="news-item-description">';
             html += newsItem.description;
             html += '</div><div class="news-item-link">';
             html += '<a href="';
             html += newsItem.link;
             html += '">' + "{% trans 'Read this story' %}" + ' &#8594;';
             html += '</a></div></div><hr class="aaa">';

             $(".brick-news-list").append(html);

        }
        newsPage += 1;
      });
      }

      $(document).ready(function() {
        loadNews(newsPage);
      });

      jQuery(
        function($) {
          $('.brick-news-list').bind('scroll', function() {
            if($(this).scrollTop() + $(this).innerHeight()>=$(this)[0].scrollHeight){
              loadNews(newsPage);
            }
         })
       }
     );


      $(function(){
        $(".brick-poll-chart").each(function(){
          var question = $(this).attr("data-question");

          $.ajax({url:'/pollquestion/' + question + '/results/', dataType: "json"}).done(function(result){

            if(!result){
              return;
            }
            var results = result[0];
            var categories = [];
            var data = [];

            var total = 0;
            for (i=0; i<results.categories.length; i++){
              category = results.categories[i];
              total += category.count;
            }

            var percentage_lookup = {};

            for (i=0; i<results.categories.length; i++){
              category = results.categories[i];
              label = category.label.trim().toUpperCase();
              categories.push(label);

              percentage = (category.count == 0) ? 0 : category.count * 100 / total;
              percentage_lookup[label] = Math.round(percentage);

              if (parseInt(percentage_lookup[label])) {
                data.push({ name:label,  y: percentage });
              }
            }

            $('#graph-' + question).highcharts({
              chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false
              },
              colors: ['{{ org|org_color:"0" }}', '{{ org|org_color:"1" }}', '{{ org|org_color:"2" }}', '{{ org|org_color:"3" }}', '{{ org|org_color:"4" }}', '{{ org|org_color:"5" }}'],
              credits: {
                enabled: false
              },
              title: {
                text: null
              },
              tooltip: {
                pointFormat: '<b>{point.percentage:.1f}%</b>',
                style: {
                  fontFamily: "UreportHeadlineFont",
                  direction: "ltr",
                }
              },
              plotOptions: {
                pie: {
                  allowPointSelect: true,
                  cursor: 'pointer',
                  size: 200,
                  dataLabels: {
                    enabled: false,
                    format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                    style: {
                        color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black',
                        fontFamily: "UreportHeadlineFont"
                    }
                  }
                }
              },
              series: [{
                type: 'pie',
                data: data
              }]
            });
          });
        });
      });

      {% if org|config:"featured_state" %}
      $(function(){
        $.ajax({url:'/boundaries/{{ org|config:"featured_state"}}/', dataType: "json"}).done(function(boundaries){
          $(".poll-map").each(function(){
            var question = $(this).attr("data-question");
            var region = $(this).attr("data-region");

            window.initMap('map-' + question, boundaries, question, region);
          });
        });
      });
      {% endif %}

      function layoutBricks(){
        var containerWidth = $('#brick-container').width();
        var gutter = 15;
        var columnWidth = (containerWidth >= 1000) ? 320 : 285;

        $('#brick-container').isotope({
          itemSelector: '.brick',
          getSortData: {
            priority: '[data-priority] parseInt'
          },
          sortBy: 'priority',
          sortAscending: false,
          masonry: {
           columnWidth: columnWidth,
           gutter: gutter
          }
        });
      }

      $(function() {
        layoutBricks();

        $(window).on('debouncedresize', function(){
          layoutBricks();
        });
      });


      $(function(){

      $(".poll-question-graph-all").each(function(){
        var question = $(this).attr("data-question");
        $.ajax({url:'/pollquestion/' + question + '/results/', dataType: "json"}).done(function(result){

          if(!result){
            return;
          }

          var results = result[0];

          var categories = [];
          var data = [];
          var colors = ["#7cb5ec", "#434348", "#90ed7d", "#f7a35c", "#8085e9", "#f15c80", "#e4d354", "#2b908f", "#f45b5b", "#91e8e1"];


          if (results.categories.length > 0) {
          var total = 0;
          for (i=0; i<results.categories.length; i++){
            category = results.categories[i];
            total += category.count;
          }
          var percentage_lookup = {};
          for (i=0; i<results.categories.length; i++){
            category = results.categories[i];
            label = category.label.trim().toUpperCase();
            categories.push(label);
            percentage = (category.count == 0) ? 0 : category.count * 100 / total;
            percentage_lookup[label] = Math.round(percentage);
            if (parseInt(percentage_lookup[label])) {
              data.push({y: percentage, color: colors[i%colors.length], dataLabels: [{
                  enabled: true,
                  inside: true,
                  align: "left",
                  formatter: function() {
                    return this.x
                  }

                }, 
                {
                  enabled: true,
                  inside: false,
                  align: "left",
                  className: "big-label",
                  style: {
                    fontWeight: 'bold',
                    fontSize: '2rem',
                    color: "#000",
                    textAlign: "right",
                  },
                  formatter: function() {
                    return Math.round(this.y * 100) / 100 + "%"
                  }
                }, 
                ]});
            }
          }
          }

          Highcharts.chart('graph-all-question-' + question, {
            chart: {
              type: 'bar',
              backgroundColor: 'transparent',
              styledMode: false,
            },
            title: {
              text: null,
            },
            xAxis: {
              categories: categories,
              title: {
                text: null
              },
              visible: false,
              labels: {
                enabled: false,
              }
            },
            yAxis: {
              min: 0,
              visible: false,
              title: {
                text: null,
              },
              labels: {
                enabled: false,
              }
            },
            tooltip: {
            },
            plotOptions: {
              bar: {
                
              }
            },
            legend: {
              enabled: false,
            },
            credits: {
              enabled: false
            },
            series: [{
              data: data,
            }]
          });
          
        });
      });

        $("#age-chart").each(function(){

           var data = {{ age_stats|safe }};

           {% if is_rtl_org %}
           data.reverse();
           {% endif %}

           var categories = [];

           for (i=0; i<data.length; i++) {
             categories.push(data[i].name)
           }

           $('#age-chart').highcharts({
             chart: {
               type: 'column',
               backgroundColor: "#000",
               spacing: [ 3, 5, 3, 5],
               height: "30%",
             },
             credits: {
               enabled: false
             },
             legend: {
               enabled: false
             },
             title: {
                 text: null
             },
             subtitle: {
                 text: null
             },
             xAxis: {
               categories: categories,
               labels : {
                   rotation: 0,
                   style: {
                     fontSize: 20,
                     fontFamily: "SharpSansDisplayBold",
                     color: "#FED200",
                 }
               },
               minorTickLength: 0,
               tickLength: 0
             },
             yAxis: {
               min: 0,
               labels: {
                 enabled: false
               },
               visible: false,
               gridLineWidth: 0,
               title: {
                 text: null
               }
             },
             tooltip: {
               enabled: false
             },
             plotOptions: {
                 column: {
                     color: '#FFF',
                     pointPadding: 0.2,
                     pointWidth: 30,
                     borderWidth: 0,
                     dataLabels:  {
                       enabled: true,
                       style: {
                         fontFamily: "SharpSansDisplayBold",
                       },
                       color: "#FFF",
                       verticalAlign:"bottom",
                       format: '<b>{point.y:.0f}%</b>'
                     }
                 }
             },
             series: [ {name: 'Age' , data: data } ]
           });
         });
       });

    -if org|config:"instagram_lightwidget_id"
      <script src="//lightwidget.com/widgets/lightwidget.js"></script>

    -if org|config:"twitter_handle"
      <script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script>