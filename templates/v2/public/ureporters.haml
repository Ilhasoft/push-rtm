- extends "public_base_v2.html"

-load compress ureport dashblocks thumbnail i18n humanize

- block content
  .bg-grid.border-t.border-b
    .max-w-page.mx-auto.p-home(class="md:flex")
      .flex-1.flex-center-y
        .text-5xl.font-bold
          -trans "Engagement"

      .flex-1.flex-center-y
        .text-xl.text-right(class="md:pl-12")
          -trans "A sentence that describes what this page is all about and who it is for"

  .max-w-page.mx-auto
    .bg-dark-blue(class="md:flex")
      .flex-1.bg-black.p-home.vertical-angle
        .font-alt.text-light1.italic.mb-4.font-bold
          -trans "Year at a Glance"

        .text-white.font-light
          .inline-block.pr-8.border-r.border-white
            .text-5xl.leading-none
              {{org.get_signups|intcomma}}
            .text-xs.font-bold
              -trans "SIGN-UPS"

          .inline-block.pl-8
            .text-5xl.leading-none
              {{average_response_rate|floatformat}} %
            .text-xs.font-bold
              -trans "AVG RESPONSE RATE"

        .text-white.mt-4.font-bold
          .inline.text-light1
            {{org.get_reporters_count|intcomma}}
          .inline.text-white
            -trans "TOTAL U-REPORTERS IN"
            {{ org.name|upper }}
          .inline.text-light1
            +{{org.get_signup_rate|floatformat}}%

        .mt-4.flex
          .flex-none.mr-8
            .text-white.text-center.inline-block.pr-4.border-r.border-white
              %img(src="{{ STATIC_URL }}img/gender-male-w.png" width="40")
              .font-bold.text-xl.leading-none.mt-2
                {{gender_stats.male_percentage}}
              .text-light1.text-sm.leading-none
                {{gender_stats.male_count|intcomma}}

            .text-white.text-center.inline-block.px-4
              %img(src="{{ STATIC_URL }}img/gender-female-w.png" width="40")
              .font-bold.text-xl.leading-none.mt-2
                {{gender_stats.female_percentage}}
              .text-light1.text-sm.leading-none
                {{gender_stats.female_count|intcomma}}
            - if org|config:"has_extra_gender"
              .text-white.text-center.inline-block.px-4.border-l.border-white
                %img(src="{{ STATIC_URL }}img/gender-other-w.png" width="40")
                .font-bold.text-xl.leading-none.mt-2
                  {{gender_stats.other_percentage}}
                .text-light1.text-sm.leading-none
                  {{gender_stats.other_count|intcomma}}

          .flex-1.inline-block(style="min-width:220px;max-width:350px")
            .relative.w-full(style="height:105px")
              {{ age_stats|json_script:"age_stats" }}
              #age-bars.w-full.h-full.absolute.age-chart(data-bar-color='{{ org|config:"light1_color"|default:"#FFD100"}}' data-label-color="white" data-stats="age_stats")

      .flex-1.text-white
        .pl-6.pr-home.py-home.text-center
          .text-sm.font-bold.mb-2
            -trans "U-REPORTERS BY REGION"
          {% with map_segment='{"location":"state"}' %}
          #ureporter-map.h-full.w-full.map(data-map-url="/v2/contact_field_results/?segment={{ map_segment|urlencode }}")
            .block(style="min-height:300px;min-width:300px;")
          {% endwith %}

  .border-t.border-b.bg-dark-gray
    .max-w-page.mx-auto.px-home.py-4.border-gray-800.sticky.top-0.z-50(class="md:flex md:justify-between")
      .text-white.font-bold.flex-center-y
        -trans "FILTER RESULTS"

      .flex-center-y
        .text-white.text-xs.flex
          - for time_filter in data_time_filters
            .border-white.pill-black.tab-button-time-filter(class="{% if forloop.first %}pill-first{% elif forloop.last %}selected pill-last{% else %}pill{% endif %}" data-time-filter="{{time_filter.time_filter_number}}")
              {{time_filter.label}}

  .max-w-page.mx-auto.bg-dark-blue.p-home.text-white.font-bold.border-b.border-white
    - for time_filter in data_time_filters
      .engagemment-content.hover-parent(id="tab-content-block-{{time_filter.time_filter_number}}" class="{% if not forloop.last %}hidden{% endif %}")
        - for metric in data_metrics
          .engagement-graph-block.hover-parent.block.mt-16.p-2.bg-dark-blue(class="md:flex" style="min-height:30rem; max-height:45rem;" data-aos="fade" id="graph-block-{{metric.slug}}-{{time_filter.time_filter_number}}")
            .hover-parent(class="md:w-2/5")
              .bg-light1.h-1.w-16.mb-4
              .text-3xl.mb-4
                {{ metric.title }}

              .text-black.text-2xs.flex.mb-6
                - for segment in data_segments
                  - if forloop.first
                    .pill-first.pill-dark-blue-inverted.tab-button-graph-switch(data-metric-slug="{{metric.slug}}" data-segment-type="{{segment.segment_type}}" data-time-filter="{{time_filter.time_filter_number}}")
                      {{segment.label}}
                  - elif forloop.last
                    .pill-last.pill-dark-blue-inverted.tab-button-graph-switch.location-dropdown.relative(data-metric-slug="{{metric.slug}}" data-segment-type="{{segment.segment_type}}" data-time-filter="{{time_filter.time_filter_number}}" data-graph-id="engagement-graph-{{metric.slug}}-{{segment.segment_type}}-{{time_filter.time_filter_number}}" id="location-pill-{{metric.slug}}-{{segment.segment_type}}-{{time_filter.time_filter_number}}")
                      .dropdown-butto
                        {{segment.label}}
                      .dropdown-content.hidden.absolute.shadow.bg-white.text-gray-800.h-64.left-0.top-auto.overflow-y-scroll.mt-2(data-html2canvas-ignore=true)
                        - for state in states
                          .state-selector.px-4.py-2(data-location-id='{{state.name}}' class="hover:bg-gray-400 hover:text-white {% if forloop.counter < 4 %}is-selected bg-gray-800 text-white{% endif %}")
                            {{state.name}}
                  - else
                    .pill.pill-dark-blue-inverted.border-gray-400.tab-button-graph-switch(data-metric-slug="{{metric.slug}}" data-segment-type="{{segment.segment_type}}" data-time-filter="{{time_filter.time_filter_number}}")
                      {{segment.label}}

              .share.flex-none.mb-4.flex-center-y.hover-show
                .block
                  %a.bg-circle-xs.border.border-white.text-white.facebook-share(href="" data-url="{% org_host_link %}{% url 'v2.public.engagement' %}")
                    %i.fa.fa-facebook
                  %a.bg-circle-xs.border.border-white.text-white(href="https://twitter.com/intent/tweet?url={% org_host_link %}{% url 'v2.public.engagement' %}")
                    %i.fa.fa-twitter
                  %a.bg-circle-xs.border.border-white.text-white(href="https://api.whatsapp.com/send?text={% org_host_link %}{% url 'v2.public.engagement' %}")
                    %i.fa.fa-whatsapp
                  %a.bg-circle-xs.border.border-white.text-white(href="mailto:?subject=Check out {{ poll.title|urlencode:\"\" }} results&amp;body=Check out the results for U-Report poll on {% org_host_link %}{% url 'v2.public.engagement'  %}" uk-icon="icon: mail; ratio: 1.5")
                    %i.fa.fa-envelope
                  %a.bg-circle-xs.border.border-white.text-white.screenshot-share(data-screen-id="graph-block-{{metric.slug}}-{{time_filter.time_filter_number}}")
                    %i.fa.fa-file-image-o

            .block(class="md:w-3/5")
              .engagement-graph-tabs(id="graph-tabs-{{metric.slug}}-{{time_filter.time_filter_number}}")
                - for segment in data_segments
                  .engagement-graph.hidden(id="graph-tabs-{{metric.slug}}-{{segment.segment_type}}-{{time_filter.time_filter_number}}")
                    .has-graph(id="engagement-graph-{{metric.slug}}-{{segment.segment_type}}-{{time_filter.time_filter_number}}" data-metric-slug="{{metric.slug}}" data-segment-type="{{segment.segment_type}}" data-time-filter="{{time_filter.time_filter_number}}")


- block script
  {{ block.super }}

  :javascript
    $(function(){
      function drawGraph(metricSlug, segmentType, timeFilter){

        var dataSlug = metricSlug + "-" + segmentType + "-" + timeFilter;
        var chartType = "column";
        if (segmentType == 'all') {
          chartType = "spline";
        }
        var results = Window.UreportEngagementStats[dataSlug];

        var colors = ["#E3002B", "#009316", "#FED100", "#3FB5E5", "#FF8200", "#000000"];
        var locationIds = $("#location-pill-" + dataSlug).children().children('.state-selector.is-selected').map(function() { return $(this).attr('data-location-id')}).get();
        if (segmentType == 'location'){
          var series = [];
          for (i=0; i<results.length; i++){
            result = results[i];
            if(locationIds.includes(result.name)) {
              result.color = colors[series.length % colors.length]
              series.push(result);
            }
          }
        } else {
          var series = results
        }

        $('#engagement-graph-' + dataSlug).highcharts({
          chart: {
              type: chartType,
              style: {
                fontFamily: "Montserrat"
              }
          },
          title: {
              text: null
          },
          legend: {
              itemStyle: {
                color: "#DDD"
              }
          },
          xAxis: {
              type: 'datetime',
              dateTimeLabelFormats: {
                month: '%b %Y',
                year: '%Y'
              },
              labels: {
                style: {
                  color: "#DDD"
                }
              },
          },
          yAxis: {
              title: {
                  text: null,
                  style: {
                    color: "#DDD"
                  }
              },
              min: 0,
              labels: {
                style: {
                  color: "#DDD"
                }
              }
          },
          tooltip: {
              headerFormat: '<b>{series.name}</b><br>',
              pointFormat: '{point.x: %b %Y}: {point.y}'
          },
          plotOptions: {
              spline: {
                  marker: {
                      enabled: true
                  }
              }
          },
          credits: {
            enabled: false
          },
          colors: ['#6CF', '#39F', '#06C', '#036', '#000'],
          series : series
        });
      }

      $(".tab-button-time-filter").on("click", function(event) {
        event.stopPropagation();
        $(this).siblings().removeClass("selected")
        $(this).addClass("selected");
        var timeFilter = $(this).attr("data-time-filter");
        $(".engagemment-content").addClass("hidden");
        $("#tab-content-block-" + timeFilter).removeClass("hidden");
        $("#tab-content-block-" + timeFilter).children().children().children().children(".selected.tab-button-graph-switch").each(function() {
          $(this).click();
        });
      });

      $(".state-selector").on('click', function(event) {
        event.stopPropagation();
        var locationIds = $(this).parent().children('.state-selector.is-selected').map(function() { return $(this).attr('data-location-id')}).get();

        if(locationIds.length < 5) {
          $(this).toggleClass('is-selected bg-gray-800 text-white');
        } else if ($(this).hasClass('is-selected')) {
          $(this).removeClass('is-selected bg-gray-800 text-white');
        } else {
          return
        }
        var dataDiv = $(this).parent().parent();

        var metricSlug = dataDiv.attr("data-metric-slug");
        var segmentType = dataDiv.attr("data-segment-type");
        var timeFilter = dataDiv.attr("data-time-filter");

        drawGraph(metricSlug, segmentType, timeFilter);

      });


      $(".pill-dark-blue-inverted").parent().each(function() {
        var chosen = $($(this).children()[Math.floor(Math.random() * 4)])
        chosen.addClass("selected");
        var metricSlug = chosen.attr("data-metric-slug");
        var segmentType = chosen.attr("data-segment-type");
        var timeFilter = chosen.attr("data-time-filter");
        var dataSlug = metricSlug + "-" + segmentType + "-" + timeFilter;
        setTimeout(function(){ 
          drawGraph(metricSlug, segmentType, timeFilter);
          $("#graph-tabs-" + dataSlug).removeClass("hidden");
         }, 1000);
      });

      $(".engagement-graph").each(function() {
        var graphDiv = $(this).children(".has-graph");
        var metricSlug = graphDiv.attr("data-metric-slug");
        var segmentType = graphDiv.attr("data-segment-type");
        var timeFilter = graphDiv.attr("data-time-filter");
        var dataSlug = metricSlug + "-" + segmentType + "-" + timeFilter;

        var params = {"metric": metricSlug, "segment": segmentType, "filter": timeFilter};
        $.ajax({url:'/v2/engagement_data/?results_params=' + encodeURIComponent(JSON.stringify(params)), dataType: "json"}).done(function(result){
          if(!result){
            return;
          }
          if(!Window.UreportEngagementStats) {
            Window.UreportEngagementStats = {}
          }

          var colors = ['#E3002B', '#000000', '#FFD100', '#40B5E5', '#FF8200', '#009917'];
          if(segmentType=="all"){
            colors = ['#2f7ed8', '#0d233a', '#8bbc21', '#910000', '#1aadce', '#492970', '#f28f43', '#77a1e5', '#c42525', '#a6c96a'];
          }

          if(segmentType=="gender"){
            colors = ['#40B5E5', '#FF8200', '#019B17'];
          }

          var serverData = result;
          var series = [];
          for (i=0; i<serverData.length; i++) {
            data = serverData[i]['data']
            cleanedData = []
            Object.keys(data).forEach(function(key){
              cleanedData.push([Date.parse(key), data[key]]);
            })
            cleanedData.sort(function(a,b){return a[0] - b[0];});
            series.push({name: serverData[i]['name'], data: cleanedData, color: colors[i % colors.length]})
          }

          Window.UreportEngagementStats[dataSlug] = series
          drawGraph(metricSlug, segmentType, timeFilter);
        });
      });
    
      $(".tab-button-graph-switch").on("click", function(event) {
        var metricSlug = $(this).attr("data-metric-slug");
        var segmentType = $(this).attr("data-segment-type");
        var timeFilter = $(this).attr("data-time-filter");
        var dataSlug = metricSlug + "-" + segmentType + "-" + timeFilter;
        event.stopPropagation();

        $(this).siblings().removeClass("selected")
        $(this).addClass("selected");

        if($(this).hasClass("location-dropdown")) {

          if($(this).children(".dropdown-content").hasClass("hidden")) {
            $(".dropdown-content").addClass("hidden");
            $(this).children(".dropdown-content").removeClass("hidden");
          } else {
            $(this).children(".dropdown-content").addClass("hidden");
          }
        } else {
          $(this).siblings().children(".dropdown-content").addClass("hidden")
        }

        $(".engagement-graph-tabs #graph-tabs-" + dataSlug).siblings().addClass("hidden");
        $("#graph-tabs-" + dataSlug).removeClass("hidden");

        drawGraph(metricSlug, segmentType, timeFilter);
      });
    });


