- extends "public_base_v2.html"

-load compress ureport dashblocks thumbnail i18n humanize

- block content
  .booklet-bg
  .booklet-bg-content
    .page-title-block
      .columns
        .column.page-title
          Engagement
  
  .block-row.engagemment-top-graph-block
    .columns.is-paddingless.is-marginless
      .column.is-one-third.block-content
        .block-title
          Poll Responses
        .block-description
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
      .column.block-content
        .engagement-graph
          #poll-responses-graph

  .homepage-reporters-stats
    .columns.is-paddingless.is-marginless
      .column
        .local-count-label
          - trans "U-REPORTERS IN"
          {{ org.name|upper }}
        .local-count
          {{ reporters|intcomma }}
        .worldwide-count-label
          - trans "U-REPORTERS WORLDWIDE:"
        .worldwide-count
          {{ global_counter|intcomma }}
      .column
        .columns.has-graph
          .column.is-1.graph-title
            - trans "AGES"
          .column.graph-chart
            .age-stats{ id: "age-chart"}

  .block-row
    .columns.is-paddingless.is-marginless
      .column.block-content
        .block-title
          Response Rate
        .block-description
          A sentence here that describes the graph
        .block-box
          .engagement-graph
            #poll-response-rate-graph

      .column.block-content.block-colored-bg-light-blue
        .block-title
          Is there any text on this page to explain any of this?
        .block-text
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
        .block-button
          %a.read-more-button.button(href="#")
            -trans "ACTION BUTTON"

  .block-row
    .columns.is-paddingless.is-marginless
      .column.block-content.block-colored-bg-gold-yellow
        .block-title
          Is there any text on this page to explain any of this?
        .block-text
          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.
        .block-button
          %a.read-more-button.button(href="#")
            -trans "ACTION BUTTON"
      .column.block-content
        .block-title
          Users who responded - 12 months
        .block-description
          A sentence here that describes how what these options mean to the work we are wanting to do together
        .block-box
          .engagement-graph
            #contact-activity-graph

-block extra-script
  {{ block.super }}
  <script src="{{ STATIC_URL }}js/highcharts.js"></script>
  {% compress js %}
  <script type="text/coffeescript" src="{{ STATIC_URL }}coffee/ureporters.coffee" />
  {% endcompress %}

  {% include "public/strings_values.html" %}

  :javascript
    $(function(){
      $.ajax({url:'/boundaries/', dataType: "json"}).done(function(boundaries){
        $(".ureport-location-map").each(function(){
          var ajaxUrl = '/contact_field_results/'
          var colorsList = gradientFactory.generate({
            from: '#DDDDDD',
            to: '{{ org|config:"primary_color"}}',
            stops: 6
          });

          window.initMap('ureport-location-map-id', boundaries, ajaxUrl,  '{{ district_zoom|lower }}' === 'true', colorsList, '{{ ward_zoom|lower }}' === 'true', '{{reporters|intcomma}}');
        });
      });
    });

    $("#poll-responses-graph").each(function() {
    
      var maleServerData = {{ responded_male|safe}};
      var maleRespondedData = [];
      Object.keys(maleServerData).forEach(function(key){
        maleRespondedData.push([Date.parse(key), maleServerData[key]]);
      })
      maleRespondedData.sort(function(a,b){return a[0] - b[0];});

      var femaleServerData = {{ responded_female|safe}};
      var femaleRespondedData = [];
      Object.keys(femaleServerData).forEach(function(key){
        femaleRespondedData.push([Date.parse(key), femaleServerData[key]]);
      })
      femaleRespondedData.sort(function(a,b){return a[0] - b[0];});

      (function (H) {

          var pendingRenders = [];
      
          // https://stackoverflow.com/questions/123999/how-to-tell-if-a-dom-element-is-visible-in-the-current-viewport/7557433#7557433
          function isElementInViewport(el) {
          
              var rect = el.getBoundingClientRect();
      
              return (
                  rect.top >= 0 &&
                  rect.left >= 0 &&
                  rect.bottom <= (
                      window.innerHeight ||
                      document.documentElement.clientHeight
                  ) &&
                  rect.right <= (
                      window.innerWidth ||
                      document.documentElement.clientWidth
                  )
              );
          }
      
          H.wrap(H.Series.prototype, 'render', function deferRender(proceed) {
              var series = this,
                  renderTo = this.chart.container.parentNode;
      
              // It is appeared, render it
              if (isElementInViewport(renderTo) || !series.options.animation || series.chart.userOptions.chart.type == 'packedbubble') {
                  proceed.call(series);
      
              // It is not appeared, halt renering until appear
              } else  {
                  pendingRenders.push({
                      element: renderTo,
                      appear: function () {
                          proceed.call(series);
                      }
                  });
              }
          });
      
          function recalculate() {
              pendingRenders.forEach(function (item) {
                  if (isElementInViewport(item.element)) {
                      item.appear();
                      H.erase(pendingRenders, item);
                  }
              });
          }
      
          if (window.addEventListener) {
              ['DOMContentLoaded', 'load', 'scroll', 'resize']
                  .forEach(function (eventType) {
                      addEventListener(eventType, recalculate, false);
                  });
          }
      
          }(Highcharts));

      $('#poll-responses-graph').highcharts({
        chart: {
            type: 'spline'
        },
        title: {
            text: null
        },
        xAxis: {
            type: 'datetime',
            dateTimeLabelFormats: { // don't display the dummy year
              month: '%b',
              year: '%b'
            },
            title: {
                text: 'Date'
            }
        },
        yAxis: {
            title: {
                text: null
            },
            min: 0
        },
        tooltip: {
            headerFormat: '<b>{series.name}</b><br>',
            pointFormat: '{point.x: %b}: {point.y:.2f} m'
        },
    
        plotOptions: {
            spline: {
                marker: {
                    enabled: true
                }
            }
        },
    
        colors: ['#6CF', '#39F', '#06C', '#036', '#000'],
        series :[
          {
            name: "Male",
            data: maleRespondedData
          },
          {
            name: "Female",
            data: femaleRespondedData
          }
        ]
     });
    });
    
    
    $("#poll-response-rate-graph").each(function() {
        var response_rates = {{ response_rate|safe}};

        var graphData = [];
        Object.keys(response_rates).forEach(function(key){
          graphData.push([Date.parse(key), response_rates[key]]);
        })

         $('#poll-response-rate-graph').highcharts({
              chart: {
                  type: 'spline'
              },
              title: {
                  text: null
              },
              xAxis: {
                  type: 'datetime',
                  dateTimeLabelFormats: { // don't display the dummy year
                    month: '%b',
                    year: '%b'
                  },
                  title: {
                      text: 'Date'
                  }
              },
              yAxis: {
                  title: {
                      text: null
                  },
                  min: 0
              },
              tooltip: {
                  headerFormat: '<b>{series.name}</b><br>',
                  pointFormat: '{point.x: %b}: {point.y:.2f} m'
              },
          
              plotOptions: {
                  spline: {
                      marker: {
                          enabled: true
                      }
                  }
              },
          
              colors: ['#6CF', '#39F', '#06C', '#036', '#000'],
              series :[
                {
                  name: "Response Rate",
                  data: graphData
                }
              ]
         });
    });


    $("#contact-activity-graph").each(function() {
        var contact_activities = {{ contact_activities|safe}};

        var graphData = [];
        Object.keys(contact_activities).forEach(function(key){
          graphData.push([Date.parse(key), contact_activities[key]]);
        })

         $('#contact-activity-graph').highcharts({
              chart: {
                  type: 'spline'
              },
              title: {
                  text: null
              },
              xAxis: {
                  type: 'datetime',
                  dateTimeLabelFormats: { // don't display the dummy year
                    month: '%b',
                    year: '%b'
                  },
                  title: {
                      text: 'Date'
                  }
              },
              yAxis: {
                  title: {
                      text: null
                  },
                  min: 0
              },
              tooltip: {
                  headerFormat: '<b>{series.name}</b><br>',
                  pointFormat: '{point.x: %b}: {point.y:.2f} m'
              },
          
              plotOptions: {
                  spline: {
                      marker: {
                          enabled: true
                      }
                  }
              },
          
              colors: ['#6CF', '#39F', '#06C', '#036', '#000'],
              series :[
                {
                  name: "Contacts activity",
                  data: graphData
                }
              ]
         });
    });

    $("#age-chart").each(function(){

           var data = {{ age_stats|safe }};

           {% if is_rtl_org %}
           data.reverse();
           {% endif %}

           var categories = [];

           for (i=0; i<data.length; i++) {
             categories.push(data[i].name)
           }

           $('#age-chart').highcharts({
             chart: {
               type: 'column',
               backgroundColor: "#000",
               spacing: [ 3, 5, 3, 5],
               height: "30%",
             },
             credits: {
               enabled: false
             },
             legend: {
               enabled: false
             },
             title: {
                 text: null
             },
             subtitle: {
                 text: null
             },
             xAxis: {
               categories: categories,
               labels : {
                   rotation: 0,
                   style: {
                     fontSize: 20,
                     fontFamily: "SharpSansDisplayBold",
                     color: "#FED200",
                 }
               },
               minorTickLength: 0,
               tickLength: 0
             },
             yAxis: {
               min: 0,
               labels: {
                 enabled: false
               },
               visible: false,
               gridLineWidth: 0,
               title: {
                 text: null
               }
             },
             tooltip: {
               enabled: false
             },
             plotOptions: {
                 column: {
                     color: '#FFF',
                     pointPadding: 0.2,
                     pointWidth: 30,
                     borderWidth: 0,
                     dataLabels:  {
                       enabled: true,
                       style: {
                         fontFamily: "SharpSansDisplayBold",
                       },
                       color: "#FFF",
                       verticalAlign:"bottom",
                       format: '<b>{point.y:.0f}%</b>'
                     }
                 }
             },
             series: [ {name: 'Age' , data: data } ]
           });
         });


    $(function(){
      $(".contact-field-graph-age").each(function(){
        var data = {{age_stats|safe}};

        {% if is_rtl_org %}
        data.reverse();
        {% endif %}

        var categories = [];
        for (var i=0; i<data.length; i++) {
          categories.push(data[i].name);
        }

        $('#graph-contact-field-age-placeholder').hide();
        $('#graph-contact-field-age').highcharts({
          chart: {
              type: 'column'
          },
          credits: {
            enabled: false
          },
          legend: {
            enabled: false
          },
          title: {
              text: null
          },
          subtitle: {
              text: null
          },
          xAxis: {
            categories: categories,
            labels : {
                style : {
                  color:'{{ org|config:"primary_color" }}',
                  fontFamily: "UreportSmallTextFont",
                  fontSize: 14
                },
                rotation: 0
            },
            minorTickLength: 0,
            tickLength: 0
          },
          yAxis: {
              min: 0,
              title: {
                  style : {
                    color:'{{ org|config:"primary_color" }}'
                  },
                  text: '(%)'
              },
              labels: {
                style : {
                  color:'{{ org|config:"primary_color" }}',
                  fontFamily: "UreportSmallTextFont",
                  fontSize: 14
                }
              }
          },
          tooltip: {
            headerFormat: '<span style="font-size:10px">{point.x}</span><table>',
            pointFormat: '<tr><td style="padding:0"><b>{point.y}</b></td></tr>',
            footerFormat: '</table>',
            shared: true,
            useHTML: true
          },
          plotOptions: {
            column: {
              color: '{{ org|config:"primary_color"}}',
              pointPadding: 0.2,
              borderWidth: 0,
              dataLabels:  {
                enabled: true,
                style : {
                      fontFamily: "UreportHeadlineFont",
                },
                format: '<b>{point.y:.0f}%</b>'
              }
            }
          },
          series: [ {name: 'Age' , data: data} ]
        });
      });
    });



    $(function(){
      $(".contact-field-graph-registration").each(function(){

        var results = {{ registration_stats|safe }};
        var categories = [];
        var data = [];

        var months = {{months|safe}};

        for (i=0; i<results.length; i++){
          category = results[i];
          label = Date.parse(category.label);
          categories.push(label);

          data.push({ name:label,  y: category.count })
        }

        {% if is_rtl_org %}
        data.reverse();
        categories.reverse();
        {% endif %}


        $('#graph-contact-field-registration-placeholder').hide();
        $('#graph-contact-field-registration').highcharts({
          chart: {
              type: 'area'
          },
          credits: {
            enabled: false
          },
          legend: {
            enabled: false
          },
          title: {
              text: null
          },
          subtitle: {
              text: null
          },
          xAxis: {
            categories: categories,
            type: 'datetime',
            labels : {
                style : {
                  color:'{{ org|config:"primary_color" }}',
                  fontFamily: "UreportSmallTextFont",
                  fontSize: 14
                },
                step: 4,
                formatter: function () {
                  // this.value is a Monday and Thursdays seems a better Month estimation day!!
                  return months[ new Date(new Date(this.value).setDate(new Date(this.value).getDate() + 3)).getMonth()];
                }
            }
          },
          yAxis: {
              min: 0,
              gridLineColor: '{{ org|config:"primary_color" }}',
              gridLineWidth: 0.3,
              labels: {
                style: {
                  color:'{{ org|config:"primary_color" }}',
                  fontFamily: "UreportSmallTextFont",
                  fontSize: 14
                  }
              },
              title: {
                  text: '{% trans "Registered" %}',
                  offset: 0,
                  x: -60,
                  y: 30,
                  align: 'low',
                  rotation: 0,
                  style: {
                     color:'{{ org|config:"primary_color" }}',
                     fontFamily: "UreportSmallTextFont",
                     fontSize: 14
                  }
              }
          },
          tooltip: {
              formatter: function() {
                   return '<table><tr><td style="padding:0; font-size: 24px; font-family:UreportHeadlineFont; "><b>'+ this.y + '</b></td></tr></table><span style="font-size:14px; font-family:UreportSmallTextFont">({% trans "Week of" %} ' + Highcharts.dateFormat('%e/%m', this.x) +')</span>';
              },
              shared: true,
              useHTML: true
          },
          plotOptions: {
              area: {
                  color: '{{ org|config:"primary_color"}}',
                  fillOpacity: 0.2,
                  pointPadding: 0.1,
                  borderWidth: 0
              }
          },
          series: [ {name: 'registration' , data: data } ]
        });
      });
    });

    {% if show_occupation_stats %}
    $(function() {
      $(".contact-field-graph-occupation").each(function(){

          var result = {{occupation_stats|safe}};

          if(!result){
            return;
          }

          var data = [];
          var categories = [];

          if (result){
            var results = result[0];
            var total = 0;
            for (i=0; i<result.length; i++){
              category = result[i];
              total += category.count;
            }

            var percentage_lookup = {};

            for (i=0; i<result.length; i++){
              category = result[i];
              label = category.label.trim();
              categories.push('');
              categories.push(label);

              percentage = (category.count == 0) ? 0 : category.count * 100 / total;
              percentage_lookup[label] = Math.round(percentage);

              data.push({ name:"", y: 0});
              data.push({ name:label,  y: Math.round(percentage) });
            }
          }

          {% if is_rtl_org %}
          data.reverse();
          categories.reverse();
          {% endif %}

          $('#graph-contact-field-occupation-placeholder').hide();
          $('#graph-contact-field-occupation').highcharts({
          chart: {
              type: 'areaspline',
              spacingTop: 75
          },
          credits: {
            enabled: false
          },
          legend: {
            enabled: false
          },
          title: {
              text: null
          },
          subtitle: {
              text: null
          },
          xAxis: {
            categories: categories,
            tickWidth: 0,
            labels : {
                enabled: false,
            }
          },
          yAxis: {
              min: 0,
              gridLineWidth: 0,
              labels: {
                enabled: false
              },
              title: {
                  text: null
              }
          },
          tooltip: {
              enabled: false
          },
          plotOptions: {
              areaspline: {
                  color: '{{ org|config:"primary_color"}}',
                  fillOpacity: 1,
                  pointPadding: 0.1,
                  borderWidth: 0,
                  marker: {
                    enabled: false,
                    states: {
                      hover: {
                        enabled: false
                      }
                    }
                  },
                  dataLabels: {
                    enabled: true,
                    useHTML: true,
                    y: 3,
                    crop: false,
                    overflow: "none",
                    formatter: function() {
                      if (this.y > 0) {
                      return '<div style="font-family: UreportHeadlineFont;text-align: center; width: 80px; line-height: 100%; font-size: 24px;color:{{ org|config:"primary_color"}};">'+ this.y + '%</div><div style="text-align:center; width: 80px; line-height: 120%; font-size: 14px; font-family:UreportSmallTextFont; white-space: normal;">' + this.x + '</div><div style="height: 35px;width: 2px;margin-left: auto;margin-right: auto; border-left: 1px solid; border-color:{{ org|config:"primary_color"}};"></div>'

                      }
                      else return '';
                    }
                  }
              }
          },
          series: [ {name: null , data: data } ]
          });
        });
      });
    {% endif %}

- block extra-style
  - load_qbs request.org 'ureporters'
  {{ block.super }}
  :css
    .highcharts-background {
      fill: transparent;
    }
   
   .hero-container {
      {% for d_block in ureporters|slice:":1" %}
      {% thumbnail d_block.image "1280x678" crop="top" as im %}
        background-image:url('{{im.url}}');
      {% empty %}
        background-image: url('{{ STATIC_URL }}img/missing_image_placeholder.jpg');
      {% endthumbnail %}
      {% endfor %}
    }
    .ureport-location-map  {
      height: 500px;
      width: 100%;
    }

    .ureport-location-map svg {
      height: 480px;
    }

    .leaflet-container {
      background: #fff;
    }

    .top-color {
      color: {{ org|config:"primary_color"}};
    }

    #graph-contact-field-age {
      height: 200px;
    }

    #graph-contact-field-gender {
      height: 200px;
    }

    #graph-contact-field-age-placeholder {
      min-height: 200px;
      padding-top: 50px;
    }

    .scale {
      {% if org|config:"is_global" %}
      display: none;
      {% endif %}
    }