language: python
sudo: true

python:
  - '3.6.4'

services:
  - redis-server

env:
  - PGDB=10
  - PGDB=9.6

cache:
  directories:
    - $HOME/.cache/pip

before_install:
  - sudo -E service postgresql stop 9.2
  - sudo -E service postgresql stop 9.3
  - sudo -E service postgresql stop 9.4
  - sudo -E service postgresql stop 9.5
  - sudo -E service postgresql stop 9.6
  - sudo -E apt-get -yq --no-install-suggests --no-install-recommends $(travis_apt_get_options) install postgresql-$PGDB postgresql-client-$PGDB postgresql-$PGDB-postgis-2.4 postgresql-$PGDB-postgis-2.4-scripts
  - sudo -E sed -i -e '/local.*peer/s/postgres/all/' -e 's/peer\|md5/trust/g' /etc/postgresql/*/main/pg_hba.conf
  - sudo -E sed -i 's/port = 5433/port = 5432/' /etc/postgresql/*/main/postgresql.conf
  - sudo -E service postgresql restart $PGDB

install:
  - pip install --upgrade pip
  - pip install -r pip-freeze.txt --upgrade
  - pip install coveralls
  - pip install flake8
  - npm install -g less
  - npm install -g coffee-script

before_script:
  - psql -U postgres -c "CREATE USER ureport WITH PASSWORD 'nyaruka';"
  - psql -U postgres -c "ALTER ROLE ureport WITH SUPERUSER;"
  - psql -U ureport postgres -c "CREATE DATABASE ureport;"
  - ln -s $TRAVIS_BUILD_DIR/ureport/settings.py.postgres $TRAVIS_BUILD_DIR/ureport/settings.py

script:
  - flake8

  # need to symlink smartmin and dash so we can localize them
  - pip show smartmin | awk '/Location:/ { print $2 "/smartmin" }' | xargs ln -s
  - pip show rapidpro-dash | awk '/Location:/ { print $2 "/dash" }' | xargs ln -s
  
  # compile messages
  - cd ureport && python ../manage.py compilemessages && cd ..

  # fail if there are changes
  - git diff --numstat
  - git diff --numstat | awk '$3 ~ /locale.*mo$/ { print "compilemessages needs to be rerun, see .travis.yml for command"; exit 1 }'

  # generate our locale messages
  - python manage.py makemessages -a -s -e haml,html,txt,py --ignore="env/*" --no-location --no-wrap | awk '/warning/ { print; fail = 1 } END { if (fail) { print "makemessages for django contains warnings"; exit 1 }}'
  - python manage.py makemessages -d djangojs -a -s --ignore="env/*" --ignore="static/js/prettify.js" --ignore="static/bower/*" --ignore="node_modules/*" --no-location --no-wrap | awk '/warning/ { print; fail = 1 } END { if (fail) { print "makemessages for djangojs contains warnings"; exit 1 }}'

  # fail if there are changes
  - git diff --numstat
  - git diff --numstat | awk '$1 > 1 && $3 ~ /locale/ { print "makemessages needs to be rerun, see .travis.yml for command"; exit 1 }'
  
  - coverage run --source="." manage.py test ureport ureport/admins ureport/assets ureport/contacts ureport/countries ureport/jobs ureport/locations ureport/news ureport/polls ureport/public ureport/utils --verbosity=2 --noinput

after_success:
  - coveralls
